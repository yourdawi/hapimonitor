#!/bin/bash

function check_updates() {
    echo "Checking for updates..."
    
    # Aktuelle Version des Skripts
    CURRENT_VERSION=$(hapimonitor --version 2>&1 | grep -oP 'v\d+\.\d+\.\d+')
    if [ -z "$CURRENT_VERSION" ]; then
        echo "Could not determine current version."
        exit 1
    fi

    # Letzte Version von GitHub
    LATEST_VERSION=$(curl -s https://api.github.com/repos/yourdawi/hapimonitor/releases/latest | grep tag_name | cut -d '"' -f 4)
    if [ -z "$LATEST_VERSION" ]; then
        echo "Could not fetch latest version from GitHub."
        exit 1
    fi

    echo "Current version: $CURRENT_VERSION"
    echo "Latest version: $LATEST_VERSION"

    if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
        echo "New version available: $LATEST_VERSION"
        if (whiptail --title "Update Available" --yesno "Update to $LATEST_VERSION?" 8 40); then
            echo "Updating..."
            curl -sSL https://raw.githubusercontent.com/yourdawi/hapimonitor/main/install.sh | sudo bash
            echo "Update complete!"
        else
            echo "Update canceled."
        fi
    else
        echo "Already up to date."
    fi
}

function uninstall() {
    if [ "$EUID" -ne 0 ]; then
        echo "Please run with sudo"
        exit 1
    fi
    
    # Verwende die install.sh-Datei f√ºr die Deinstallation
    if [ -f "/usr/local/bin/hapimonitor.py" ]; then
        echo "Running uninstall script..."
        curl -sSL https://raw.githubusercontent.com/yourdawi/hapimonitor/main/install.sh | sudo bash -s -- --uninstall
    else
        echo "HApiMonitor is not installed."
    fi
}

case "$1" in
    "-up")
        check_updates
        ;;
    "-uninstall")
        uninstall
        ;;
    "--version")
        hapimonitor --version
        ;;
    *)
        echo "Usage: hapimonitor-cli [-up | -uninstall | --version]"
        ;;
esac